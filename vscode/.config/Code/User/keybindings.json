// Place your key bindings in this file to override the defaults
[
    // open TODO tree
    {
        "key": "ctrl+t ctrl+t",
        "command": "workbench.view.extension.todo-tree-container",
        "when": "editorFocus"
    },
    // {
    //     "key": "alt+a down",
    //     "command": "workbench.action.focusBelowGroup",
    //     "when": "editorFocus"
    // },
    // toggle bottom panel
    {
        "key": "alt+a down",
        "command": "workbench.action.togglePanel",
        "when": "true"
    },
    // enhance current editor
    {
        "key": "alt+a up",
        "command": "workbench.action.toggleEditorWidths",
        "when": "editorTextFocus"
    },
    // move between editor windows
    {
        "key": "alt+a left",
        "command": "workbench.action.focusLeftGroup",
        "when": "editorFocus"
    },
    {
        "key": "alt+a left",
        "command": "workbench.action.focusLeftGroup",
        "when": "notebookEditorFocused"
    },
    {
        "key": "alt+a alt+p",
        "command": "workbench.action.focusPreviousGroup",
        "when": "editorFocus"
    },
    {
        "key": "alt+a right",
        "command": "workbench.action.focusRightGroup",
        "when": "editorFocus"
    },
    {
        "key": "alt+a right",
        "command": "workbench.action.focusRightGroup",
        "when": "notebookEditorFocused"
    },
    // {
    //     "key": "alt+a up/",
    //     "command": "workbench.action.focusAboveGroup",
    //     "when": "editorFocus"
    // },
    {
        "key": "alt+a alt+n",
        "command": "workbench.action.focusNextGroup",
        "when": "editorFocus"
    },
    // open side-bar (left) and allow use cursor
    {
        "key": "alt+a a",
       "command": "workbench.action.focusSideBar",
    },
    // custom autocomplete: tab is next word, shift+tab is next line
    {
        "key": "shift+tab",
        "command": "editor.action.inlineSuggest.acceptNextLine",
        "when": "inlineEditIsVisible && tabShouldAcceptInlineEdit && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineEditIsVisible && inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineEditIsVisible && inlineSuggestionVisible && tabShouldAcceptInlineEdit && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible"
    },
    {
        "key": "tab",
        "command": "editor.action.inlineSuggest.acceptNextWord", // or acceptNextLine
        "when": "inlineSuggestionVisible && !editorReadonly"
    },
    {
        "key": "tab",
        "command": "-editor.action.inlineSuggest.commit",
        "when": "inlineEditIsVisible && tabShouldAcceptInlineEdit && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineEditIsVisible && inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineEditIsVisible && inlineSuggestionVisible && tabShouldAcceptInlineEdit && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible"
    },
    {
        "key": "alt+a n",
        "command": "editor.action.marker.next",
        "when": "editorFocus"
    },
    {
        "key": "alt+a p",
        "command": "editor.action.marker.prev",
        "when": "editorFocus"
    }
]